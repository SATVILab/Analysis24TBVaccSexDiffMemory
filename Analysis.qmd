---
title: Analyse memory response
format:
  html:
    embed-resources: true
---

```{r}
#| include: false
library(ggplot2)
library(tibble)
```

## Data prep

Here we load the data:

```{r}
library(DataTidy24TBVaccSexDiff)
data("data_tidy_vacc_freq")
```

Now we calculate the summed response and the profile response, and then extract the memory response:

```{r}
data_tidy_vacc_summed <- data_tidy_vacc_freq |>
  vacc_calc_response_summed("response") |>
  vacc_calc_vaccine_induced_response("response") |>
  vacc_set_neg_to_zero("response") |>
  vacc_extract_memory() |>
  dplyr::filter(subset == "cd4")
data_tidy_vacc_summed
data_tidy_vacc_profile <- data_tidy_vacc_freq |>
  vacc_calc_response_profile("response") |>
  vacc_calc_vaccine_induced_response("response") |>
  vacc_extract_memory() |>
  dplyr::filter(subset == "cd4")
data_tidy_vacc_profile
```

## EDA 
```{r}
# Plot histogram of response magnitude grouped by vaccine and sex
hist <- ggplot(data_tidy_vacc_summed, aes(x = response, fill = sex)) +
  geom_histogram(binwidth = 1, color = "blue", position = "dodge") +
  facet_grid(vaccine ~ sex) +
  labs(title = "Histogram of Response Magnitudes by Vaccine and Sex", x = "Response Magnitude", y = "Frequency") +
  theme_minimal()+
  theme(
    panel.background = element_rect(fill = "white"),
    plot.background = element_rect(fill = "white"),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    axis.line = element_line(color = "black"))

ggsave("histograms.png", hist)
```

```{r}
# Boxplot of response magnitude by grouped vaccine and sex
boxplot <- ggplot(data_tidy_vacc_summed, aes(x = vaccine, y = response, fill = sex)) +
  geom_boxplot() +
  facet_wrap(~ sex) +
  labs(title = "Boxplot of Response Magnitudes by Vaccine and Sex", x = "Vaccine", y = "Response Magnitude") +
  theme_minimal()+
  theme(
    panel.background = element_rect(fill = "white"),
    plot.background = element_rect(fill = "white"),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    axis.line = element_line(color = "black"))

ggsave("boxplot by vaccine and sex.png", boxplot)
```

## Kruskal-Wallis test 
 - "used to determine if there are statistically significant differences between two or more groups of an independent variable on a continuous or ordinal dependent variable."

```{r}
# Kruskal-Wallis test group by vaccine and infection status
kw_test <- data_tidy_vacc_summed |>
  group_by(vaccine, infxn) |>
  summarise(
    test = list(kruskal.test(response ~ sex)),
    .groups = 'drop') |>
  mutate(
    t_stat = sapply(test, function(x) x$statistic),
    p_value = sapply(test, function(x) x$p.value))

kw_test
```

```{r}
# Summary stats after performing kruskal- wallis test
summary_stats <- data_tidy_vacc_summed |>
  group_by(vaccine,infxn, sex) |>
  summarise(
    count = n(),
    mean = mean(response),
    sd = sd(response),
    median = median(response),
    IQR = IQR(response))

summary_stats
```

## Analysis
```{r}
boxplot2 <- ggplot(data_tidy_vacc_summed, aes(x = sex, y = response, fill = sex)) +
  geom_boxplot() +
  facet_grid(vaccine ~ infxn) +
  labs(title = "Boxplot of Response Magnitude by Infection Status and Sex", x = "Sex", y = "Response Magnitude") +
  theme_minimal()+
  theme(
    panel.background = element_rect(fill = "white"),
    plot.background = element_rect(fill = "white"),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    axis.line = element_line(color = "black"))

ggsave("boxplot by infection status and sex.png", boxplot2)
```

# Mann- Whitney Test with multiple testing error rate correction

```{r}
mw_test <- list(
  infxn = wilcox.test(response ~ infxn, data = data_tidy_vacc_summed),
  sex = wilcox.test(response ~ sex, data = data_tidy_vacc_summed)
)
p_values <- sapply(mw_test, function(test) test$p.value)
p_values
p_adjusted <- p.adjust(p_values, method = "holm")
p_adjusted
```

Taking the square root of the summed response:
```{r}
#data_tidy_vacc_summed <- data_tidy_vacc_summed |>
  #mutate(sqrt_response = sqrt(response))
```

## Betareg Model
```{r}
# Install and load package
#install.packages("betareg")
#install.packages("statmod")
#install.packages("numDeriv")
library(betareg)
library(statmod)
library(numDeriv)
```

Transform the response magnitude to range between 0 and 1 and taking the sqrt
```{r}
data_tidy_vacc_summed <- data_tidy_vacc_summed |>
  mutate(prop_response = sqrt(response / 100))
```

Fitting the Beta Regression model for infected: 
```{r}
model_infected <- betareg(prop_response ~ vaccine*sex, data_tidy_vacc_summed |> dplyr::filter(infxn =="infected"))
summary(model_infected)

# Plotting the residuals for infected
png("residuals_infected.png")
plot(model_infected$residuals, main = "Residuals of the infected Beta Regression Model")
abline(h= 0, col= "red", lwd= 2)
dev.off()
```


Fitting the Beta Regression model for uninfected: 
```{r}
model_uninfected <- betareg(prop_response ~ vaccine*sex, data_tidy_vacc_summed|> dplyr::filter(infxn == "uninfected"))
summary(model_uninfected)

# Plotting Residuals for uninfected
png("residuals_uninfected.png")
plot(model_uninfected$residuals, main = "Residuals of the uninfected Beta Regression Model")
abline (h=0, col = "red", lwd= 2)
dev.off()
```


