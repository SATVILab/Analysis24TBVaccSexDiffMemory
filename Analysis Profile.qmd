---
title: Analyse memory response
format:
  html:
    embed-resources: true
---

```{r}
#| include: false
library(ggplot2)
library(tibble)
library(dplyr)
library(cowplot)
theme_cowplot_bg <- function() {
  theme_cowplot() +
  theme(
    panel.background = element_rect(fill = "white"),
    plot.background = element_rect(fill = "white")
  )
}
```

## Data prep

Here we load the data:

```{r}
library(DataTidy24TBVaccSexDiff)
data("data_tidy_vacc_freq")
```

Now we calculate the summed response and the profile response, and then extract the memory response:
```{r}
data_tidy_vacc_profile <- data_tidy_vacc_freq |>
  vacc_calc_response_profile("response") |>
  vacc_calc_vaccine_induced_response("response") |>
  vacc_extract_memory() |>
  dplyr::filter(subset == "cd4") |>
  dplyr::filter(
    vaccine %in% c("h1", "m72")
  )
data_tidy_vacc_profile
```

## Response Profile
Boxplot of response profile:

```{r}
knitr::kable(data_tidy_vacc_freq|>dplyr::filter(ptid=='mva85a-tb008-5' & subset=='cd4'& timepoint=="168"))
knitr::kable(data_tidy_vacc_profile|>dplyr::filter(ptid=='mva85a-tb008-5'))
```

```{r}
rp_box1 <- ggplot(data_tidy_vacc_profile, aes(x = sex, y = response, fill = sex)) +
  geom_boxplot() +
  facet_grid(vaccine + infxn ~ cyt_combn, scales = "free") +
  labs(title = "Response by Sex and Infection Status for each Cytokine Combination",
       x = "Sex",
       y = "Response") +
  theme_cowplot_bg() +
  cowplot::background_grid(major = "xy") +
  geom_hline(yintercept = 0, col = "black")
   
ggsave('Profile by cytokine combination.png',rp_box1)

 #subset boxplot filtering 2 vaccines
selected_vaccines <- c('h1', 'm72')

# Selected 2 vaccines project slides
# Filter the dataset
filtered_data <- data_tidy_vacc_profile %>%
  filter(vaccine %in% selected_vaccines)

profile_2 <- ggplot(filtered_data, aes(x = sex, y = response, fill = sex)) +
  geom_boxplot() +
  facet_grid(vaccine + infxn ~ cyt_combn, scales = "free") +
  #facet_grid(vaccine ~ infxn,labeller = labeller(vaccine = toupper)) +
  labs(title = "Response by Sex and Infection Status for each Cytokine Combination",
       x = "Sex",
       y = "Response") +
  theme_cowplot_bg() +
  theme(axis.text.x = element_blank(),        # Remove x-axis text
    axis.ticks.x = element_blank(),
    legend.position = 'bottom')+   
  background_grid(major='y')+
  guides(fill = guide_legend(title = NULL))   

ggsave('Profile boxplot 2.png',profile_2)  

```

### PCA Biplot
```{r}
#create a wide format where each cytokine combination is a separate column
profile_wide <- data_tidy_vacc_profile |>
  tidyr::pivot_wider(names_from = cyt_combn, values_from = response)

# Select only the cytokine combination columns for PCA
cytokine_cols <- colnames(profile_wide)[grepl("\\+", colnames(profile_wide))]
pca_result <- prcomp(profile_wide[, cytokine_cols], scale. = TRUE)  

# combine PCA results with the original metadata
pca_data <- as.data.frame(pca_result$x) |>
  dplyr::bind_cols(profile_wide |>
  dplyr::select(vaccine, sex, infxn))

# extract PCA loadings
loadings <- as.data.frame(pca_result$rotation[, 1:2]) # Take only the first two PCs
loadings$cyt_combn <- rownames(loadings) # Add cytokine combination names

# scaling factor for arrows
arrow_scale <- 8.5  

# scale PCA loadings for arrows
scaled_loadings <- loadings |>
  dplyr::mutate(PC1 = PC1 * arrow_scale,
         PC2 = PC2 * arrow_scale)


pca_var <- pca_result$sdev^2
pca_var_explained <- pca_var / sum(pca_var)
pc1_var <- scales::percent(pca_var_explained[1])
pc2_var <- scales::percent(pca_var_explained[2])        
```

```{r}
pca_plot1 <- ggplot(pca_data, aes(x = PC1, y = PC2, color = vaccine, shape = sex)) +
  geom_point(size = 3) +
  facet_wrap(~ infxn) +
  labs(title = "PCA Biplot", x = "PC1", y = "PC2") + 
  geom_segment(data = scaled_loadings, aes(x = 0, y = 0, xend = PC1, yend = PC2), 
               arrow = arrow(length = unit(0.3, "cm")), color = "black", inherit.aes = FALSE) +
  geom_text(data = scaled_loadings, aes(x = PC1, y = PC2, label = cyt_combn), nudge_x = 1.5, nudge_y = 0.4, vjust = 1, hjust = 1, color = "black", inherit.aes = FALSE) +
  theme_cowplot_bg()

ggsave('PCA_Biplot.png', pca_plot1, width = 12, height = 6)
```

```{r}
# calculate mean positions for each vaccine and sex combination
mean_positions <- pca_data %>%
  dplyr::group_by(vaccine, sex,infxn) %>%
  dplyr::summarize(PC1 = mean(PC1), PC2 = mean(PC2))

mean_positions <- mean_positions %>%
  dplyr::mutate(combo = paste(vaccine, sex, sep = "-"))

pca_plot2 <- ggplot(pca_data, aes(x = PC1, y = PC2, color = vaccine, shape = sex)) +
  facet_wrap(~ infxn) +
  labs(title = "PCA Biplot with Mean Positions", x = "PC1", y = "PC2") + 
  geom_segment(data = scaled_loadings, aes(x = 0, y = 0, xend = PC1, yend = PC2), 
               arrow = arrow(length = unit(0.3, "cm")), color = "black", inherit.aes = FALSE) +
  geom_text(data = scaled_loadings, aes(x = PC1, y = PC2, label = cyt_combn), 
            nudge_x = 1.5, nudge_y = 0.4, vjust = 1, hjust = 1, color = "black", 
            inherit.aes = FALSE) +
  geom_point(size = 3) +          
  geom_point(data = mean_positions, aes(x = PC1, y = PC2), shape=1,fill=NA,
             size = 4, color = "orange" ,stroke=1.5) +
  ggrepel::geom_text_repel(data = mean_positions, aes(x = PC1, y = PC2, label = combo), 
            nudge_x = 1, nudge_y = 0.5, vjust = 1, hjust = 1, color = "black") +
  theme_cowplot_bg()

ggsave('pca_ mean position.png', pca_plot2, width = 14, height = 6)
```

```{r}
mean_positions <- pca_data %>%
  dplyr::group_by(vaccine, sex, infxn) %>%
  dplyr::summarize(PC1 = mean(PC1), PC2 = mean(PC2))

mean_positions <- mean_positions %>%
  dplyr::mutate(combo = paste(vaccine, sex, sep = "-"))

pca_plot3 <- ggplot(pca_data|>dplyr::filter(infxn=='infected'), aes(x = PC1, y = PC2, color = vaccine, shape = sex)) +
  labs(title = "PCA Biplot with Mean Positions", 
       x = paste0("PC1 (", pc1_var, ")"), 
       y = paste0("PC2 (", pc2_var, ")")) +
  geom_segment(data = scaled_loadings, aes(x = 0, y = 0, xend = PC1, yend = PC2), 
               arrow = arrow(length = unit(0.3, "cm")), color = "black", inherit.aes = FALSE) +
  geom_text(data = scaled_loadings, aes(x = PC1, y = PC2, label = cyt_combn), 
            nudge_x = 1.5, nudge_y = 0.4, vjust = 1, hjust = 1, color = "black", 
            inherit.aes = FALSE) +
  geom_point(size = 3) +          
  geom_point(data = mean_positions, aes(x = PC1, y = PC2, color = vaccine), 
             shape=1, fill=NA, size = 4, stroke=1.5) +
  ggrepel::geom_text_repel(data = mean_positions, aes(x = PC1, y = PC2, label = combo), 
            nudge_x = 1, nudge_y = 0.5, vjust = 1, hjust = 1, color = "black") +
  theme_cowplot_bg()+ 
  theme(axis.text.x = element_blank(),        # Remove x-axis text
    axis.ticks.x = element_blank())


ggsave('pca_mean_position2.png', pca_plot3, width= 10, height =6)

```

### Analysis of Response Profile: 
Transform response to lie between 0 and 1 using proportions:
```{r}
data_tidy_vacc_profile <- data_tidy_vacc_profile |>
  dplyr::mutate(response = pmax(0, response)) |> 
  dplyr::mutate(response_proportion = sqrt(response / 100) + 1e-6)
```

Identify individuals for which the sum of absolute changes from pre-vaccination(vaccine-induced summed response) was 0.02 or more:
```{r}
participant_ids <- data_tidy_vacc_profile %>%
  filter(response >= 0.02) %>%
  pull(ptid)
```

Fit beta regression model for infected individuals with interaction term
```{r}
library(betareg)
library(statmod)
library(numDeriv)

full_model_inf1 <- betareg(response_proportion ~ sex * vaccine * cyt_combn, data = data_tidy_vacc_profile|>
                  dplyr::filter(ptid %in% participant_ids)|>
                  dplyr::filter(infxn =="infected"))

summary(full_model_inf1)

library(purrr)

# Split the dataset by cytokine combination
cytokine_splits <- data_tidy_vacc_profile %>%
  filter(ptid %in% participant_ids)|>
  filter(infxn == "infected") %>%
  split(.$cyt_combn)

# Fit beta regression model for each cytokine combination
beta_models_inf1 <- map(cytokine_splits, function(data) {
  betareg(response_proportion ~ sex * vaccine, data = data)
})
beta_models_inf1
```

Fit the models excluding the mva85a and h56 vaccines due to small sample sizes

```{r}
#full_model_inf2 <- betareg(response_proportion ~ sex * vaccine * cyt_combn, data = data_tidy_vacc_profile|>
#                           dplyr::filter(ptid %in% participant_ids)|>
#                            dplyr::filter(infxn =="infected"))|>
#                            filter(!vaccine %in% c("mva85a", "h56"))
#
#summary(full_model_inf2)

cytokine_splits <- data_tidy_vacc_profile %>%
  filter(ptid %in% participant_ids) %>%
  filter(infxn == "infected") %>%
  filter(!vaccine %in% c("mva85a", "h56")) %>%  # Exclude specific vaccines
  split(.$cyt_combn)

# Fit beta regression model for each cytokine combination
beta_models2 <- map(cytokine_splits, function(data) {
  betareg(response_proportion ~ sex * vaccine, data = data)
})
beta_models2

```


Fit beta regression model for uninfected individuals with interaction term
```{r}
full_model_uninf1 <- betareg(response_proportion ~ sex * vaccine * cyt_combn, data = data_tidy_vacc_profile|>
                  dplyr::filter(ptid %in% participant_ids)|>
                  dplyr::filter(infxn =="uninfected"))

summary(full_model_uninf1)

# Split the dataset by cytokine combination
cytokine_splits <- data_tidy_vacc_profile %>%
  filter(ptid %in% participant_ids)|>
  filter(infxn == "uninfected") %>%
  split(.$cyt_combn)

# Fit beta regression model for each cytokine combination
beta_models_uninf1 <- map(cytokine_splits, function(data) {
  betareg(response_proportion ~ sex * vaccine, data = data)
})
beta_models_uninf1
```